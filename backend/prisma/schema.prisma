
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      =env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  name      String
  email     String @unique
  password  String
  role      String
  companyId String? @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  company   Company? @relation(fields: [companyId], references: [id])
}

model Company {
  id        String @id @default(uuid()) @db.Uuid
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  users     User[]
  Job       Job[]
}

model Candidate {
  id                        String   @id @default(uuid()) @db.Uuid
  name                      String
  email                     String   @unique
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @default(now())

  telephone                 String?
  ageGroup                  String?
  wageExpectation           Decimal?
  wageActual                Decimal?
  lastCompany               String?
  seniority                 String?
  gender                    String?
  pcd                       Boolean?
  
  country                   String?
  state                     String?
  city                      String?
  neighbourhood             String?

  begin                     DateTime?
  alocation                 String?
  travel                    Boolean?
  availabilityOfChange      Boolean?

  education                 String?
  skills                    String[]
  languages                 String[]

  socials                   String?
  weblink                   String?
  cv                        String?

  JobCandidate JobCandidate[]
}

model Job {
  id            String   @id @default(uuid()) @db.Uuid
  title         String
  description   String
  companyId     String   @db.Uuid  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())

  skills        String[]
  education     String?
  languages     Json?
  pcd           Boolean
  country       String?
  state         String?
  city          String?
  neighbourhood String?
  alocation     String?
  travel        Boolean
  duration      String?
  quantity      Int
  jobOwner      String?
  priority      String?
  status        String?
  internalNotes String?
  salary        String?

  company       Company @relation(fields: [companyId], references: [id])

  JobCandidate  JobCandidate[]
}

model JobCandidate {
  jobId        String    @db.Uuid
  candidateId  String    @db.Uuid
  appliedAt    DateTime @default(now())
  status       String?
  interviewAt  DateTime?

  job          Job      @relation(fields: [jobId], references: [id])
  candidate    Candidate @relation(fields: [candidateId], references: [id])

   @@id([jobId, candidateId])
}
